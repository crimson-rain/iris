name: Rust CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install sccache
        run: |
          SCCACHE_VERSION="0.7.5"  # Replace with the latest version
          ARCH=$(uname -m)
          if [ "$ARCH" = "x86_64" ]; then ARCH="x86_64"; else ARCH="aarch64"; fi
          curl -L -o sccache.tar.gz "https://github.com/mozilla/sccache/releases/download/v${SCCACHE_VERSION}/sccache-${SCCACHE_VERSION}-${ARCH}-unknown-linux-musl.tar.gz"
          tar -xzf sccache.tar.gz
          mv sccache-*/sccache ~/.cargo/bin/
          rm -rf sccache.tar.gz sccache-*

      - name: Use sccache
        run: echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Cache Cargo build artifacts
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin
            target
          key: rust-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-${{ runner.os }}-

      - name: List directory contents (debugging)
        run: ls -la
        working-directory: ./

      - name: Build project
        run: cargo build --verbose
        working-directory: ./iris-gen

      - name: Run unit tests only (ignore integration tests)
        run: cargo test --lib --verbose -- --test-threads=4
        working-directory: ./iris-gen

      - name: Run Clippy (Linting)
        run: cargo clippy -- -D warnings
        working-directory: ./iris-gen

      - name: Check Formatting
        run: cargo fmt -- --check
        working-directory: ./iris-gen
