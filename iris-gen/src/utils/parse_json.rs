//! Used to ignore everything but the JSON object generated by the LLM.
//! Uses Regex, but I will look for a more efficent method.
use crate::error::IrisError;

pub fn parse_json(value: &str) -> Result<String, IrisError> {
    let start = value.find('{').ok_or_else(|| IrisError::FailedToParse("No JSON found".to_string()))?;
    let end = value.rfind('}').ok_or_else(|| IrisError::FailedToParse("Incomplete JSON".to_string()))?;

    let json_str = &value[start..=end];

    Ok(json_str.to_string())
}

#[cfg(test)]
mod tests {
    use super::*;
    
    #[test]
    fn success_test_json() {
        let json_string = r#"{ name: "HelloWorld",
        }"#;

        assert!(parse_json(json_string).is_ok(), "Failed to Parse JSON Text")
    }

    #[test]
    fn failed_test_json() {
        let json_string = r#"{ name: "HelloWorld",
        "#;

        assert!(parse_json(json_string).is_err(), "Failed to Parse JSON Text")
    }
}